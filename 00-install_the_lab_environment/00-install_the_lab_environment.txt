Lab 00 : install the lab environment
====================================
:author: Louis Coilliot
:numbered:
:icons:
:data-uri:
:iconsdir: /home/lofic/Documents/icons/asciidoc

Introduction
------------
We will use some virtual machines, in order not to break our desktop
environment.

We'll build a clean image, create a snapshot of it and boot/work on the 
snapshot.

To revert to the clean state, we just delete the snapshot and recreate it.

LVM provides the snapshot feature and some flexibility on the storage space
used.

We will use KVM for the virtual machine solution.

The management interface for KVM will be `virsh` and `virt-manager`.

Prepare some logical volumes
----------------------------
You need to find some storage space for LVM :

- if you didn't use LVM to host your file systems during the installation of
your OS
- if you don't have any space left

Let's suppose you're using your laptop.

You can use Debian, Ubuntu, Fedora, whatever.

First BACKUP YOUR DATA.

Then make space for LVM.

On my laptop I backed up some partitions, destroyed them, recreated them smaller
and restored the data.

`fdisk` or `cfdisk` is fine for that.

With `parted` you should be able to reduce partitions without destroying the
data on it. May be. 

When you managed to get some extra space, use it for LVM.

Make a partition on the free space. 

Use `8e` as the partition's system id. This means LVM. I think it is not 
required but it is a good tag for administration when you come back a year
later.

[NOTE]
On recent Linux systems (e.g. RHEL 6), `partprobe` will no more make the
kernel know about live changes in the partitioning. Some people experienced data
loss with this. So you'll need a reboot. I don't know of a better way.

At this point you should read a good tutorial on LVM. 

And become familiar with the command line tools.

In particular `pvs`, `vgs`, `lvs`, `pvcreate`, `vgcreate`, `lvcreate`,
`vgchange`, `lvchange`

Basically, LVM uses some storage resources (disks, partitions, LUNs, ...), puts
the resources in a big storage pool and picks in the pool to create or extend
some logical volumes.

IMPORTANT: LAB 00-1 : create a logical volume of 3GB.

Example :
[source, sh]
--------------------------------------------------------------------------------
# Set sda9 as a PV = Physical Volume (i.e. resource) for LVM
pvcreate /dev/sda9
# Create a volume group (i.e. storage pool) using our only PV
vgcreate vg0 /dev/sda9
# Create a logical volume 'vmlab' from this pool
lvcreate -L+3G -n vmlab vg0
# Later : create a snapshot of this LV
lvcreate -s -L+500M -n vmlabsnap /dev/vg0/vmlab
--------------------------------------------------------------------------------

Create a network bridge
-----------------------
The bridge is used to connect your virtual machines to the LAN, through your
host system.

In Debian/Ubuntu
~~~~~~~~~~~~~~~~
You can set in `/etc/network/interfaces` :
--------------------------------------------------------------------------------
auto eth0
iface eth0 inet manual

auto br0
iface br0 inet dhcp 
        bridge_ports eth0
        bridge_fd 9
        bridge_hello 2
        bridge_maxage 12
        bridge_stp off
--------------------------------------------------------------------------------

Or a static version :
--------------------------------------------------------------------------------
auto eth0
iface eth0 inet manual

auto br0
iface br0 inet static 
        bridge_ports eth0
        bridge_fd 9
        bridge_hello 2
        bridge_maxage 12
        bridge_stp off
        address 192.168.1.42
        network 192.168.1.0
        netmask 255.255.255.0
        broadcast 192.168.1.255
        gateway 192.168.1.1
--------------------------------------------------------------------------------

If you have troubles with the pxe boot on the bridge, see :

link:https://bugzilla.redhat.com/show_bug.cgi?id=638735[https://bugzilla.redhat.com/show_bug.cgi?id=638735]

In a RedHat-like OS
~~~~~~~~~~~~~~~~~~~
I mean Red Hat Enterprise Linux, Oracle Enterprise Linux, Centos, Fedora and 
such distros.

It is a good exercise to search for how to do it with the documentation
available IN THE SYSTEM.

IMPORTANT: LAB 00-2 : create a bridge (persistent after reboot). 


[TIP]
.Don't panic
================================================================================
********************************************************************************
This may help :

--------------------------------------------------------------------------------
yum provides */sysconfig.txt
grep -i bridge sysconfig.txt
--------------------------------------------------------------------------------

You should also look at the parameter `NM_CONTROLLED`

Check with : 
[source, sh]
brctl show
********************************************************************************
================================================================================

Set a DHCP server
-----------------
Don't do it if you already have a DHCP server on the LAN.

You need a DHCP server for the network install of the virtual machines in
`virt-manager`.

In Debian/Ubuntu
~~~~~~~~~~~~~~~~
Install the service
[source, sh]
apt-get install dhcp3-server

I don't want it at boot time :
[source, sh]
update-rc.d -f dhcp3-server remove 

A minimal configuration :
--------------------------------------------------------------------------------
cat<<EOF>/etc/dhcp3/dhcpd.conf
subnet 192.168.1.0 netmask 255.255.255.0 { range 192.168.1.100 192.168.1.200; }
EOF
--------------------------------------------------------------------------------

Start the service :
[source, sh]
service dhcp3-server restart 

In a RedHat-like OS 
~~~~~~~~~~~~~~~~~~~
[source, sh]
yum install dhcp

I don't want it at boot time :
[source, sh]
chkconfig dhcpd off

A minimal configuration :
--------------------------------------------------------------------------------
cat<<EOF>/etc/dhcp/dhcpd.conf
subnet 192.168.1.0 netmask 255.255.255.0 { range 192.168.1.100 192.168.1.200; }
EOF
--------------------------------------------------------------------------------

Start the service :
[source, sh]
service dhcpd restart 


Provide the resources for the OS installation on the VM
-------------------------------------------------------
ATOW Centos 6 is not yet available, so we'll use RHEL 6.

Get the DVD iso image on RHN.

Mount the iso image
~~~~~~~~~~~~~~~~~~~

IMPORTANT: LAB 00-3 : mount the iso image.

As an exercise, you'll make it persistent after reboot.

[TIP]
.Don't panic
================================================================================
********************************************************************************
The mount command should recognise automatically the file system type that you
need to set in fstab. Then you can list your mount points to look at the type. 
********************************************************************************
================================================================================

Provide the resources via a web server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

[IMPORTANT]
LAB 00-4 : Install Apache and publish the content of the OS install DVD.

The OS install base will be available as:

http://1.2.3.4/el6dvd/

Replace 1.2.3.4 with your IP.

You will need to use the directives `Alias` and `Directory`.

In the DVD, the repodata folder is a symlink. You must tell Apache to follow
it with a specific directive. 

[TIP]
.Don't panic
================================================================================
********************************************************************************
You should check the basic `httpd.conf` provided in the `httpd` package of RHEL  
for syntax examples.
********************************************************************************
================================================================================


Install KVM and KVM tools
-------------------------

Bios
~~~~
You need to enable the option `Virtualization Technology` in the BIOS.

In your system, test with :
[source, sh]
modprobe kvm-intel

or
[source, sh]
modprobe kvm-amd

depending on your hardware.


In Debian/Ubuntu
~~~~~~~~~~~~~~~~


[source, sh]
--------------------------------------------------------------------------------
apt-get install kvm
apt-get install libvirt-bin virtinst virt-manager
apt-get install uml-utilities # (for tunctl)
apt-get install kvm-pxe
--------------------------------------------------------------------------------

Add your user to the groups `kvm` and `libvirtd`

In a RedHat-like OS
~~~~~~~~~~~~~~~~~~~
Try this:

[source, sh]
yum install kvm virt-manager virt-viewer

Or have a look at:

[source, sh]
LANG=C yum grouplist | grep -i virt  


Install the VM
--------------
We could do a manual install.

But we will use a kickstart file for automation because :

- it will allow you to quickly and reliably redeploy your vm
- anyway you should know how to do it

A basic kickstart file is provided in the folder `resources`.

It should work as is.

The root password is plokiploki

Publish it in your web server, available as:

http://1.2.3.4/ks/ks-rhel6.cfg

Replace 1.2.3.4 with your IP.

Now you should have:

- the OS install base available as: http://1.2.3.4/el6dvd/
- the kickstart published as: http://1.2.3.4/ks/ks-rhel6.cfg
- a logical volume to store the VM image

You're ready to make a network install in `virt-manager`

IMPORTANT: LAB 00-5 : install two virtual machines.

The first named 'infra' that will provide infrastructures services.

The second named 'lab' for the future labs.

[WARNING]
I've observed many crashes in anaconda during the installation of RHEL6
or Fedora 14 if you allocate less than 1 GB of RAM to the machine. So allocate
1 GB and change it after the installation (512 MB if fine) to avoid problems.

You can check the logs in `/var/log/libvirt/qemu` to see which commands are 
issued in the kvm backend.

Check also the libvirt definition of the virtual machines in
`/etc/libvirt/qemu/`

Work with snapshots
-------------------

Create a snapshot of the LV where the vm is stored.
For example:
--------------------------------------------------------------------------------
lvcreate -s -L+500M -n vmlabsnap /dev/vg0/vmlab
--------------------------------------------------------------------------------

You can check the % of use of the snapshots with:
[source, sh]
lvs

Work on the snapshot. You can change the target device for the vm in
[source, sh]
/etc/libvirt/qemu/lab.xml

You need to restart the service libvirt-bin to refresh this info in
`virt-manager`.

[source, sh]
service libvirt-bin restart

IMPORTANT: LAB 00-6 : write a script to revert the vm to a clean original state.

Use `virsh` and the LVM snapshots.

Boot a vm, make some modifications, then revert the vm.

You should now have two virtual machines to safely experiment on.

